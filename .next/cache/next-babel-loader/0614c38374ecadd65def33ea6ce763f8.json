{"ast":null,"code":"var _jsxFileName = \"/Users/nhatvu148/Work/JavaScript/Nextjs/first-next/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport Navbar from \"../components/Navbar\";\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  })));\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n//     return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/nhatvu148/Work/JavaScript/Nextjs/first-next/pages/_app.js"],"names":["Navbar","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACxC,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AAMH,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\nimport Navbar from \"../components/Navbar\"\n\nconst MyApp = ({ Component, pageProps }) => {\n    return (\n        <>\n            <Navbar />\n            <Component {...pageProps} />\n        </>\n    )\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n\n//     return { ...appProps }\n// }\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}