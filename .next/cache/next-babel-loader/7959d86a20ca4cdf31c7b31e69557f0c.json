{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nhatvu148/Work/JavaScript/Nextjs/first-next/pages/post.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// import { withRouter } from \"next/router\"\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return (//alternative withRouter vs query string from getServerSideProps\n    __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, \"Comments for Post #\", id), comments.map(function (comment) {\n      return __jsx(\"p\", {\n        key: comment.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }\n      }, comment.email);\n    }))\n  );\n};\n\n_c = Post;\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, email), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, body));\n};\n\n_c2 = Comment;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["/Users/nhatvu148/Work/JavaScript/Nextjs/first-next/pages/post.js"],"names":["Post","id","comments","map","comment","email","Comment","body"],"mappings":";;;;;;AAAA;AAGA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA,MAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/B,SACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwBD,EAAxB,CADJ,EAEKC,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD,EAAa;AACvB,aAAO;AAAG,QAAA,GAAG,EAAEA,OAAO,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBG,OAAO,CAACC,KAA7B,CAAP;AACH,KAFA,CAFL;AAFJ;AASH,CAVD;;KAAML,I;;AAYN,IAAMM,OAAO,GAAG,SAAVA,OAAU,QAAqB;AAAA,MAAlBD,KAAkB,SAAlBA,KAAkB;AAAA,MAAXE,IAAW,SAAXA,IAAW;AACjC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAJ,CAFJ,CADJ;AAMH,CAPD;;MAAMD,O;;AAmBN,eAAeN,IAAf","sourcesContent":["// import { withRouter } from \"next/router\"\nimport Axios from \"axios\"\n\nconst Post = ({ id, comments }) => {\n    return (\n        //alternative withRouter vs query string from getServerSideProps\n        <div>\n            <h1>Comments for Post #{id}</h1>\n            {comments.map((comment) => {\n                return <p key={comment.id}>{comment.email}</p>\n            })}\n        </div>\n    )\n}\n\nconst Comment = ({ email, body }) => {\n    return (\n        <div>\n            <h5>{email}</h5>\n            <p>{body}</p>\n        </div>\n    )\n}\n\nexport async function getServerSideProps({ query }) {\n    const res = await Axios.get(`https://jsonplaceholder.typicode.com/comments?postId=3`)\n    const { data } = res\n    console.log(data[0])\n\n    return {\n        props: { ...query, comments: data }, // will be passed to the page component as props\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}